1. ajax

	Ajax(Asynchronous JavaScript and XML, 에이잭스)는 비동기적인 웹 애플리케이션의 
	제작을 위해 아래와 같은 조합을 이용하는 웹 개발 기법이다.

	표현 정보를 위한 HTML (또는 XHTML) 과 CSS
	동적인 화면 출력 및 표시 정보와의 상호작용을 위한 DOM, 자바스크립트
	웹 서버와 비동기적으로 데이터를 교환하고 조작하기 위한 XML, XSLT, XMLHttpRequest (Ajax 	애플리케이션은 XML/XSLT 대신 미리 정의된 HTML이나 일반 텍스트, JSON, JSON-RPC를 이용할 	수 있다).

2. Xmlhttprequest

	XMLHttpRequest(XHR)은 웹 브라우저와 웹 서버 간에 메소드가 데이터를 전송하는 
	객체 폼의 API이다. 이 객체는 브라우저의 자바스크립트 환경에 의해 제공된다.

3. JSON

	JSON은 속성-값 쌍으로 이루어진 데이터 오브젝트를 전달하기 위해 인간이 
	읽을 수 있는 텍스트를 사용하는 개방형 표준 포맷이다. 
	비동기 브라우저/서버 통신 을 위해, 넓게는 XML을 대체하는 주요 데이터 포맷이다. 
	특히, 인터넷에서 자료를 주고 받을 때 그 자료를 표현하는 방법으로 알려져 있다. 
	자료의 종류에 큰 제한은 없으며, 특히 컴퓨터 프로그램의 변수값을 표현하는 데 적합하다.

4. JSON.stringify()

	JSON.stringify() 메소드(method)는 자바스크립트 값을 JSON 문자열로 변환하고, 
	리플레이서(replacer) 함수가 지정되어있을 때 선택적으로 바꾸거나, 
	리플레이서 배열이 지정되어있을 때 지정된 속성만 선택적으로 포함할 수 있다.

5. JSON.parse()

	 JSON.parse 를 사용하여 JSON 문자열을 객체로 변환합니다.

         AJAX 요청을 사용하여 서버에서 JSON을 요청할 수 있습니다.

 	 서버의 응답이 JSON 형식으로 작성된 경우 문자열을 
	
	 JavaScript 객체로 구문 분석 할 수 있습니다.


-----------------------------------

Ajax

비동기, 자바스크립트 ,XML =>> 요즘엔 JSON 방식으로 구현

Ajax는 비 동기적인 웹 애플리케이션의 제작을 위한 웹 개발 기법이다.

기존 웹 애플리케이션

    브라우저에 폼을 채우고 서버로 제출하여 응답을 얻음 

Ajax 웹 어플리케이션

    필요한 데이터만을 웹서버에 요청해서 클라이언트 쪽에서 데이터 처리 가능.
    
장점
    페이지 이동없이 고속으로 화면을 전환 할 수 있다.
    서
    

단점 
    Ajax를 쓸 수 없는 브라우저에 대한 문제가 있다.
    Http클라이언트의 기능이 한정되어 있다.
    지원하는 charset이 한정되어 있다. (UTF8)
    페이지 이동없는 통신으로 보안상 문제가 있다.
    스크립트로 작성되기 때문에 디버깅이 용이 하지 않음
    요청을 남발하면 역으로 서버 과부하 걸릴 수 있다.
    동일-출처 정책으로 인해 다른 도메인과는 통신이 불가능하다.(Cross-Domain 문제)


: XML

var req = new XMLHttpRequest();
req.open(' 전송방식', '서버페이지(php나 jsp'),false(비동기방식)); // 세번째 인자로 true를 주면 동기방식이 된다.
req.onreadystatechange = function (aEvt) {
    if (req.readyState == 4) {
        if(req.status == 200)
            dump(req.responseText);
        else
            dump("Error loading page\n");
    }
};
req.send(null);


--------------------------

JSON.parse(data)l // data(문자열;)를 JSON객체로 변환
var ob = JSON.parse(data);

JSON.stringify // JSON 객체를 data(문자열)로 변환

Imagine we have this object in JavaScript:

    var obj = {"name":"John", "age":30, "city":"New York"};

Use the JavaScript function JSON.stringify() to convert it into a string.

    var myJSON = JSON.stringify(obj);

    echo myJSON = {"name":"John", "age":30, "city":"New York"};

    document.getElementById("demo").innerHTML = myJSON 결과 역시 {"name":"John", "age":30, "city":"New York"};

$.ajax({
    type:"post/get"(생략가능), 
    url: 서버페이지 url,
    data : 서버 전송 data,
    datatype : 데이터 타입(생략가능),
    success: function(resData받는데이터){
        // 서버에 전송 성공시
        // resData; // 서버에서 전송해주는 data
    }else{
        //실패시 처리
    } 
})


쓰이는 메소드들이 있음.
.done() ;;// 성공
.fail() ;; // 실패시